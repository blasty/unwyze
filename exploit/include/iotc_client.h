#ifndef __IOTC_CLIENT_H__
#define __IOTC_CLIENT_H__

#include <stdint.h>
#include <stddef.h>
#include <sys/socket.h>
#include <arpa/inet.h>

#define IOTC_CMD_DISCO 0x601
#define IOTC_CMD_DATA_TX 0x407
#define IOTC_CMD_DATA_RX 0x408

#define IOTC_MAGIC_A 0x04
#define IOTC_MAGIC_B 0x02

#define IOTC_SERVER_UID_LEN 20
#define IOTC_RANDOM_ID_LEN 8

#define IOTC_MAX_FRAME_SIZE 0x800

typedef struct
{
    char server_uid[20];
    char server_ip[32];
    uint8_t random_id[8];
    uint16_t server_port;
    uint32_t tx_seq;
    uint32_t rx_seq;
    int sockfd;
    struct sockaddr_in sock_addr;
} iotc_client_t;

void iotc_client_init(iotc_client_t *ctx, char *server_ip, uint16_t server_port);
uint8_t *iotc_client_wrap(
    iotc_client_t *ctx, uint8_t flag_03, uint16_t cmd,
    uint8_t flag_0f, uint8_t *data, size_t datalen);

uint8_t *iotc_client_pkt_disco_a(iotc_client_t *ctx, size_t *len);
uint8_t *iotc_client_pkt_disco_b(iotc_client_t *ctx, size_t *len);
uint8_t *iotc_client_pkt_data(iotc_client_t *ctx, uint8_t *data, size_t datalen);

ssize_t iotc_client_write(iotc_client_t *ctx, uint8_t *buf, size_t len);
ssize_t iotc_client_read(iotc_client_t *ctx, uint8_t *buf, size_t len);

int iotc_client_start_session(iotc_client_t *ctx);
ssize_t iotc_client_write_session_data(iotc_client_t *ctx, uint8_t *buf, size_t len);
ssize_t iotc_client_read_session_data(iotc_client_t *ctx, uint8_t *buf, size_t len);

#endif