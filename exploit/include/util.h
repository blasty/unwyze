#ifndef __UTIL_H__
#define __UTIL_H__

#include <stdint.h>
#include <stdbool.h>
#include <stdarg.h>

// utility
#define info(fmt, args...) report('$', false, fmt, ##args)
#define infov(fmt, args...) report('~', false, fmt, ##args)
#define maybe(fmt, args...) report('?', false, fmt, ##args)
#define fatal(fmt, args...) report('!', true, fmt, ##args)
#define info_value64(name, value) infov("%-24s: %016lx", name, value)

void report(char indicator, bool error, const char *fmt, ...);

void hexdump(void *ptr, int buflen);
uint8_t *slurp_file(char *fn, long *size_out);

uint16_t le16(uint8_t *p);
uint32_t le32(uint8_t *p);
uint16_t be16(uint8_t *p);
uint32_t be32(uint8_t *p);

uint16_t rbe16(uint8_t *p, uint32_t offset);
void wle16(uint8_t *p, uint16_t val);
void wbe16(uint8_t *p, uint16_t val);
void wbe32(uint8_t *p, uint32_t val);
void wle32(uint8_t *p, uint32_t val);
void wle64(uint8_t *p, uint64_t val);

uint32_t ip2addr(char *ip);

#endif